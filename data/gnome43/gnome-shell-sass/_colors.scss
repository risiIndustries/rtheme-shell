// When color definition differs for dark and light variant,
// it gets @if-ed depending on $variant

@import 'palette';

$is_highcontrast: "false";

$_dark_base_color: **dark_base_color**;

$base_color: if($variant == 'light', **light_base_color**, $_dark_base_color);
$bg_color: if($variant == 'light', **bg_color_light**, **bg_color_dark**);
$fg_color: if($variant == 'light', **fg_color_light**, **fg_color_dark**);

$selected_fg_color: **selected_fg_color**;
$selected_bg_color: **selected_bg_color**;
$selected_borders_color: if($variant== 'light', **selected_borders_color_light**, **selected_borders_color_dark**);

$borders_color: if($variant == 'light', **borders_color_light**, **borders_color_dark**);
$borders_edge: if($variant == 'light', **borders_edge_light**, **borders_edge_dark**);

$link_color: if($variant == 'light', **link_color_light**, **link_color_dark**);
$link_visited_color: if($variant == 'light', **link_visited_color_light**, **link_visited_color_dark**);

$warning_color: if($variant == 'light', **warning_color_light**, **warning_color_dark**);
$error_color: if($variant == 'light', **error_color_light**, **error_color_dark**);
$success_color: if($variant == 'light', **success_color_light**, **success_color_dark**);
$destructive_color: **destructive_color**;

$osd_fg_color: **osd_fg_color**;
$osd_bg_color: $_dark_base_color; //hardcoded for both light & dark
$osd_insensitive_bg_color: **osd_insensitive_bg_color**;
$osd_insensitive_fg_color: if($variant == 'light', **osd_insensitive_fg_color_light**,  **osd_insensitive_fg_color_dark**);
$osd_borders_color: **osd_borders_color**;
$osd_outer_borders_color: **osd_outer_borders_color**;

$shadow_color: if($variant == 'light', **shadow_color_light**, **shadow_color_dark**);

// button
$button_mix_factor: 5%;

// cards
$card_bg_color: if($variant == 'light', **card_bg_color_light**, **card_bg_color_dark**);
$card_outer_borders_color: **card_outer_borders_color**;

// notifications
$bubble_buttons_color: if($variant == 'light', **bubble_bubble_color_light**, **bubble_bubble_color_dark**);

// overview background color
$system_bg_color: **system_bg_color**;

//insensitive state derived colors
$insensitive_fg_color: **insensitive_fg_color**;
$insensitive_bg_color: **insensitive_bg_color**;
$insensitive_borders_color: **insensitive_borders_color**;

//colors for the backdrop state, derived from the main colors.
$backdrop_base_color: if($variant =='light', **backdrop_base_color_light**, **backdrop_base_color_dark**);
$backdrop_bg_color: **backdrop_bg_color**;
$backdrop_fg_color: **backdrop_fg_color**;
$backdrop_insensitive_color: if($variant =='light', **backdrop_insensitive_fg_color_light**, **backdrop_insensitive_fg_color_dark**);
$backdrop_borders_color: **backdrop_borders_color**;
$backdrop_dark_fill: **backdrop_dark_fill**;


// derived checked colors
$checked_bg_color: if($variant=='light', **checked_bg_color_light**, **checked_bg_color_dark**);
$checked_fg_color: if($variant=='light', **checked_fg_color_light**, **checked_fg_color_dark**);

// derived hover colors
$hover_bg_color: if($variant=='light', **hover_bg_color_light**, **hover_bg_color_dark**);
$hover_fg_color: if($variant=='light', **hover_fg_color_light**, **hover_fg_color_dark**);

// derived active colors
$active_bg_color: if($variant=='light', **active_bg_color_light**, **active_bg_color_dark**);
$active_fg_color: if($variant=='light', **active_fg_color_light**, **active_fg_color_dark**);